{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/covid19Dashboard/src/components/FindFood/index.js\";\nimport { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport Cookies from 'js-cookie';\nimport { BiSearchAlt } from 'react-icons/bi';\nimport Header from '../Header';\nimport Footer from '../Footer';\nimport RestaurantCard from '../RestaurantCard';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS'\n};\n\nclass FindFood extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputSearch: '',\n      allRestaurants: [],\n      vegList: [],\n      nonVegList: [],\n      searchResultList: [],\n      showSearchResults: false,\n      noSearchResults: false\n    };\n\n    this.fetchRestaurantsDetails = async () => {\n      this.setState({\n        apiStatus: apiStatusConstants.inProgress\n      });\n      const token = Cookies.get('jwt_token');\n      const url = `https://apis.ccbp.in/restaurants-list?&offset=0&limit=30`;\n      const options = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        method: 'GET'\n      };\n      const response = await fetch(url, options);\n      const data = await response.json();\n\n      if (response.ok === true) {\n        const updatedData = data.restaurants.map(restaurant => ({\n          name: restaurant.name,\n          cuisine: restaurant.cuisine,\n          id: restaurant.id,\n          imageUrl: restaurant.image_url,\n          rating: restaurant.user_rating.rating,\n          totalReviews: restaurant.user_rating.total_reviews,\n          menuType: restaurant.menu_type,\n          ratingColor: restaurant.user_rating.rating_color\n        }));\n        const vegRestaurants = updatedData.filter(eachItem => eachItem.menuType === 'VEG');\n        const nonVegRestaurants = updatedData.filter(eachItem => eachItem.menuType === 'NON-VEG');\n        this.setState({\n          allRestaurants: updatedData,\n          vegList: vegRestaurants,\n          nonVegList: nonVegRestaurants,\n          apiStatus: apiStatusConstants.success\n        });\n      } else {\n        this.setState({\n          apiStatus: apiStatusConstants.failure\n        });\n      }\n    };\n\n    this.onChangeInput = event => {\n      this.setState({\n        inputSearch: event.target.value,\n        noSearchResults: false\n      });\n\n      if (event.target.value === '') {\n        this.setState({\n          showSearchResults: false\n        });\n      }\n    };\n\n    this.onSearchUserInput = () => {\n      this.setState({\n        showSearchResults: true\n      });\n      this.searchResults();\n    };\n\n    this.onClickEnter = event => {\n      if (event.key === 'Enter') {\n        this.setState({\n          showSearchResults: true\n        });\n        this.searchResults();\n      }\n    };\n\n    this.searchResults = () => {\n      const {\n        inputSearch,\n        allRestaurants\n      } = this.state;\n      const filterRestaurantsBySearch = allRestaurants.filter(restaurant => restaurant.name.toLowerCase().includes(inputSearch.toLowerCase()));\n\n      if (filterRestaurantsBySearch.length === 0) {\n        const filterRestaurantsByCuisine = allRestaurants.filter(restaurant => restaurant.cuisine.toLowerCase().includes(inputSearch.toLowerCase()));\n        this.setState({\n          searchResultList: filterRestaurantsByCuisine\n        });\n\n        if (filterRestaurantsByCuisine.length === 0) {\n          this.setState({\n            noSearchResults: true\n          });\n        }\n      } else {\n        this.setState({\n          searchResultList: filterRestaurantsBySearch\n        });\n\n        if (filterRestaurantsBySearch.length === 0) {\n          this.setState({\n            noSearchResults: true\n          });\n        }\n      }\n    };\n\n    this.closeNotFound = () => {\n      this.setState({\n        noSearchResults: false,\n        inputSearch: ''\n      });\n    };\n\n    this.renderFailureView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurant-error-view-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://res.cloudinary.com/dw1fcsurf/image/upload/v1635819172/Tasty%20Kitchen/PageNotFound/Group_wbimtk.png\",\n        alt: \"restaurants failure\",\n        className: \"restaurant-failure-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"restaurant-failure-heading-text\",\n        children: \"Page Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"restaurant-failure-description\",\n        children: \"we are sorry, the page you requested could not be found\\u2028Please go back to the homepage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"error-button\",\n        type: \"button\",\n        children: \"Home Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this);\n\n    this.renderSearchBar = () => {\n      const {\n        inputSearch\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onKeyDown: this.onClickEnter,\n          onChange: this.onChangeInput,\n          value: inputSearch,\n          type: \"search\",\n          className: \"input-search\",\n          placeholder: \"Find Food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onSearchUserInput,\n          type: \"button\",\n          className: \"search-button\",\n          children: /*#__PURE__*/_jsxDEV(BiSearchAlt, {\n            size: 23\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderVegRestaurants = () => {\n      const {\n        vegList\n      } = this.state;\n      const filteredVegList = vegList.filter(eachItem => eachItem.rating > 3.5);\n      const vegRestaurantsList = filteredVegList.slice(0, 6);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"veg-restaurants-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"top-rated-veg-heading\",\n          children: \"Top Rated Veg Restaurants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"veg-restaurants-container\",\n          children: vegRestaurantsList.map(restaurant => /*#__PURE__*/_jsxDEV(RestaurantCard, {\n            restaurant: restaurant\n          }, restaurant.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderNonVegRestaurants = () => {\n      const {\n        nonVegList\n      } = this.state;\n      const filteredNonVegList = nonVegList.filter(eachItem => eachItem.rating > 3.5);\n      const NonVegRestaurantsList = filteredNonVegList.slice(0, 6);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"veg-restaurants-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"top-rated-veg-heading\",\n          children: \"Top Rated Non Veg Restaurants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"veg-restaurants-container\",\n          children: NonVegRestaurantsList.map(restaurant => /*#__PURE__*/_jsxDEV(RestaurantCard, {\n            restaurant: restaurant\n          }, restaurant.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderSearchResults = () => {\n      const {\n        searchResultList\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"search-result-restaurants-container\",\n        children: searchResultList.map(restaurant => /*#__PURE__*/_jsxDEV(RestaurantCard, {\n          restaurant: restaurant\n        }, restaurant.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderNotFound = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"food-not-found\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"no-food-image\",\n        alt: \"no food\",\n        src: \"https://res.cloudinary.com/dw1fcsurf/image/upload/v1635819172/Tasty%20Kitchen/PageNotFound/Group_wbimtk.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"no-restaurants-heading\",\n        children: \"No Restaurants Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-food-para\",\n        children: \"Search With Different Keyword\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.closeNotFound,\n        className: \"no-food-close-button\",\n        type: \"button\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }, this);\n\n    this.renderLoadingView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      testid: \"restaurant-details-loader\",\n      className: \"restaurant-find-food-loader-container\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"Oval\",\n        color: \"#F7931E\",\n        height: \"50\",\n        width: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 5\n    }, this);\n\n    this.renderSuccessView = () => {\n      const {\n        showSearchResults,\n        noSearchResults\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [this.renderSearchBar(), noSearchResults && this.renderNotFound(), showSearchResults && this.renderSearchResults(), this.renderVegRestaurants(), this.renderNonVegRestaurants()]\n      }, void 0, true);\n    };\n\n    this.renderFindRestaurants = () => {\n      const {\n        apiStatus\n      } = this.state;\n\n      switch (apiStatus) {\n        case apiStatusConstants.success:\n          return this.renderSuccessView();\n\n        case apiStatusConstants.failure:\n          return this.renderFailureView();\n\n        case apiStatusConstants.inProgress:\n          return this.renderLoadingView();\n\n        default:\n          return null;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fetchRestaurantsDetails();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"find-food-page\",\n        children: this.renderFindRestaurants()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default FindFood;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/covid19Dashboard/src/components/FindFood/index.js"],"names":["Component","Loader","Cookies","BiSearchAlt","Header","Footer","RestaurantCard","apiStatusConstants","initial","success","failure","inProgress","FindFood","state","inputSearch","allRestaurants","vegList","nonVegList","searchResultList","showSearchResults","noSearchResults","fetchRestaurantsDetails","setState","apiStatus","token","get","url","options","headers","Authorization","method","response","fetch","data","json","ok","updatedData","restaurants","map","restaurant","name","cuisine","id","imageUrl","image_url","rating","user_rating","totalReviews","total_reviews","menuType","menu_type","ratingColor","rating_color","vegRestaurants","filter","eachItem","nonVegRestaurants","onChangeInput","event","target","value","onSearchUserInput","searchResults","onClickEnter","key","filterRestaurantsBySearch","toLowerCase","includes","length","filterRestaurantsByCuisine","closeNotFound","renderFailureView","renderSearchBar","renderVegRestaurants","filteredVegList","vegRestaurantsList","slice","renderNonVegRestaurants","filteredNonVegList","NonVegRestaurantsList","renderSearchResults","renderNotFound","renderLoadingView","renderSuccessView","renderFindRestaurants","componentDidMount","render"],"mappings":"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","sourcesContent":["import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport Cookies from 'js-cookie'\n\nimport {BiSearchAlt} from 'react-icons/bi'\n\nimport Header from '../Header'\nimport Footer from '../Footer'\nimport RestaurantCard from '../RestaurantCard'\n\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass FindFood extends Component {\n  state = {\n    inputSearch: '',\n    allRestaurants: [],\n    vegList: [],\n    nonVegList: [],\n    searchResultList: [],\n    showSearchResults: false,\n    noSearchResults: false,\n  }\n\n  componentDidMount() {\n    this.fetchRestaurantsDetails()\n  }\n\n  fetchRestaurantsDetails = async () => {\n    this.setState({\n      apiStatus: apiStatusConstants.inProgress,\n    })\n    const token = Cookies.get('jwt_token')\n    const url = `https://apis.ccbp.in/restaurants-list?&offset=0&limit=30`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok === true) {\n      const updatedData = data.restaurants.map(restaurant => ({\n        name: restaurant.name,\n        cuisine: restaurant.cuisine,\n        id: restaurant.id,\n        imageUrl: restaurant.image_url,\n        rating: restaurant.user_rating.rating,\n        totalReviews: restaurant.user_rating.total_reviews,\n        menuType: restaurant.menu_type,\n        ratingColor: restaurant.user_rating.rating_color,\n      }))\n\n      const vegRestaurants = updatedData.filter(\n        eachItem => eachItem.menuType === 'VEG',\n      )\n      const nonVegRestaurants = updatedData.filter(\n        eachItem => eachItem.menuType === 'NON-VEG',\n      )\n\n      this.setState({\n        allRestaurants: updatedData,\n        vegList: vegRestaurants,\n        nonVegList: nonVegRestaurants,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({\n        apiStatus: apiStatusConstants.failure,\n      })\n    }\n  }\n\n  onChangeInput = event => {\n    this.setState({inputSearch: event.target.value, noSearchResults: false})\n    if (event.target.value === '') {\n      this.setState({showSearchResults: false})\n    }\n  }\n\n  onSearchUserInput = () => {\n    this.setState({showSearchResults: true})\n    this.searchResults()\n  }\n\n  onClickEnter = event => {\n    if (event.key === 'Enter') {\n      this.setState({showSearchResults: true})\n      this.searchResults()\n    }\n  }\n\n  searchResults = () => {\n    const {inputSearch, allRestaurants} = this.state\n    const filterRestaurantsBySearch = allRestaurants.filter(restaurant =>\n      restaurant.name.toLowerCase().includes(inputSearch.toLowerCase()),\n    )\n    if (filterRestaurantsBySearch.length === 0) {\n      const filterRestaurantsByCuisine = allRestaurants.filter(restaurant =>\n        restaurant.cuisine.toLowerCase().includes(inputSearch.toLowerCase()),\n      )\n      this.setState({searchResultList: filterRestaurantsByCuisine})\n      if (filterRestaurantsByCuisine.length === 0) {\n        this.setState({noSearchResults: true})\n      }\n    } else {\n      this.setState({searchResultList: filterRestaurantsBySearch})\n      if (filterRestaurantsBySearch.length === 0) {\n        this.setState({noSearchResults: true})\n      }\n    }\n  }\n\n  closeNotFound = () => {\n    this.setState({noSearchResults: false, inputSearch: ''})\n  }\n\n  renderFailureView = () => (\n    <div className=\"restaurant-error-view-container\">\n      <img\n        src=\"https://res.cloudinary.com/dw1fcsurf/image/upload/v1635819172/Tasty%20Kitchen/PageNotFound/Group_wbimtk.png\"\n        alt=\"restaurants failure\"\n        className=\"restaurant-failure-img\"\n      />\n      <h1 className=\"restaurant-failure-heading-text\">Page Not Found</h1>\n      <p className=\"restaurant-failure-description\">\n        we are sorry, the page you requested could not be found Please go back\n        to the homepage\n      </p>\n      <button className=\"error-button\" type=\"button\">\n        Home Page\n      </button>\n    </div>\n  )\n\n  renderSearchBar = () => {\n    const {inputSearch} = this.state\n\n    return (\n      <div className=\"input-search-container\">\n        <input\n          onKeyDown={this.onClickEnter}\n          onChange={this.onChangeInput}\n          value={inputSearch}\n          type=\"search\"\n          className=\"input-search\"\n          placeholder=\"Find Food\"\n        />\n        <button\n          onClick={this.onSearchUserInput}\n          type=\"button\"\n          className=\"search-button\"\n        >\n          <BiSearchAlt size={23} />\n        </button>\n      </div>\n    )\n  }\n\n  renderVegRestaurants = () => {\n    const {vegList} = this.state\n    const filteredVegList = vegList.filter(eachItem => eachItem.rating > 3.5)\n    const vegRestaurantsList = filteredVegList.slice(0, 6)\n\n    return (\n      <div className=\"veg-restaurants-section\">\n        <h1 className=\"top-rated-veg-heading\">Top Rated Veg Restaurants</h1>\n        <ul className=\"veg-restaurants-container\">\n          {vegRestaurantsList.map(restaurant => (\n            <RestaurantCard restaurant={restaurant} key={restaurant.id} />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  renderNonVegRestaurants = () => {\n    const {nonVegList} = this.state\n    const filteredNonVegList = nonVegList.filter(\n      eachItem => eachItem.rating > 3.5,\n    )\n    const NonVegRestaurantsList = filteredNonVegList.slice(0, 6)\n\n    return (\n      <div className=\"veg-restaurants-section\">\n        <h1 className=\"top-rated-veg-heading\">Top Rated Non Veg Restaurants</h1>\n        <ul className=\"veg-restaurants-container\">\n          {NonVegRestaurantsList.map(restaurant => (\n            <RestaurantCard restaurant={restaurant} key={restaurant.id} />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  renderSearchResults = () => {\n    const {searchResultList} = this.state\n\n    return (\n      <ul className=\"search-result-restaurants-container\">\n        {searchResultList.map(restaurant => (\n          <RestaurantCard restaurant={restaurant} key={restaurant.id} />\n        ))}\n      </ul>\n    )\n  }\n\n  renderNotFound = () => (\n    <div className=\"food-not-found\">\n      <img\n        className=\"no-food-image\"\n        alt=\"no food\"\n        src=\"https://res.cloudinary.com/dw1fcsurf/image/upload/v1635819172/Tasty%20Kitchen/PageNotFound/Group_wbimtk.png\"\n      />\n      <h1 className=\"no-restaurants-heading\">No Restaurants Found</h1>\n      <p className=\"no-food-para\">Search With Different Keyword</p>\n      <button\n        onClick={this.closeNotFound}\n        className=\"no-food-close-button\"\n        type=\"button\"\n      >\n        Close\n      </button>\n    </div>\n  )\n\n  renderLoadingView = () => (\n    <div\n      testid=\"restaurant-details-loader\"\n      className=\"restaurant-find-food-loader-container\"\n    >\n      <Loader type=\"Oval\" color=\"#F7931E\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderSuccessView = () => {\n    const {showSearchResults, noSearchResults} = this.state\n\n    return (\n      <>\n        {this.renderSearchBar()}\n        {noSearchResults && this.renderNotFound()}\n        {showSearchResults && this.renderSearchResults()}\n        {this.renderVegRestaurants()}\n        {this.renderNonVegRestaurants()}\n      </>\n    )\n  }\n\n  renderFindRestaurants = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderSuccessView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <div className=\"find-food-page\">{this.renderFindRestaurants()}</div>\n        <Footer />\n      </>\n    )\n  }\n}\n\nexport default FindFood\n"]},"metadata":{},"sourceType":"module"}