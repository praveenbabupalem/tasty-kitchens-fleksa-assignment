{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/covid19Dashboard/src/components/ReactSlider/index.js\";\nimport { Component } from 'react';\nimport Slider from 'react-slick';\nimport Loader from 'react-loader-spinner';\nimport Cookies from 'js-cookie';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS'\n};\n\nclass ReactSlider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sliderImages: [],\n      apiStatus: apiStatusConstants.initial\n    };\n\n    this.getSliderImages = async () => {\n      this.setState({\n        apiStatus: apiStatusConstants.inProgress\n      });\n      const jwtToken = Cookies.get('jwt_token');\n      const apiUrl = `https://apis.ccbp.in/restaurants-list/offers`;\n      const options = {\n        headers: {\n          Authorization: `Bearer ${jwtToken}`\n        },\n        method: 'GET'\n      };\n      const response = await fetch(apiUrl, options);\n\n      if (response.ok) {\n        const fetchedData = await response.json();\n        const updatedData = fetchedData.offers.map(offer => ({\n          id: offer.id,\n          imageUrl: offer.image_url\n        }));\n        this.setState({\n          sliderImages: updatedData,\n          apiStatus: apiStatusConstants.success\n        });\n      } else {\n        this.setState({\n          apiStatus: apiStatusConstants.failure\n        });\n      }\n    };\n\n    this.renderSliderListView = () => {\n      const {\n        sliderImages\n      } = this.state;\n      const settings = {\n        dots: true,\n        autoplay: true,\n        autoplaySpeed: 2000,\n        arrows: false,\n        infinite: true\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: /*#__PURE__*/_jsxDEV(Slider, { ...settings,\n          children: sliderImages.map(eachImage => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"slider-image\",\n              src: eachImage.imageUrl,\n              alt: \"offer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, eachImage.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderFailureView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-error-view-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"slider-failure-heading-text\",\n        children: \"Oops! Something Went Wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this);\n\n    this.renderLoadingView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      testid: \"restaurants-offers-loader\",\n      className: \"slider-loader-container\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"Oval\",\n        color: \"#F7931E\",\n        height: \"50\",\n        width: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this);\n\n    this.renderAllImages = () => {\n      const {\n        apiStatus\n      } = this.state;\n\n      switch (apiStatus) {\n        case apiStatusConstants.success:\n          return this.renderSliderListView();\n\n        case apiStatusConstants.failure:\n          return this.renderFailureView();\n\n        case apiStatusConstants.inProgress:\n          return this.renderLoadingView();\n\n        default:\n          return null;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getSliderImages();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-image-container\",\n      children: this.renderAllImages()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ReactSlider;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/covid19Dashboard/src/components/ReactSlider/index.js"],"names":["Component","Slider","Loader","Cookies","apiStatusConstants","initial","success","failure","inProgress","ReactSlider","state","sliderImages","apiStatus","getSliderImages","setState","jwtToken","get","apiUrl","options","headers","Authorization","method","response","fetch","ok","fetchedData","json","updatedData","offers","map","offer","id","imageUrl","image_url","renderSliderListView","settings","dots","autoplay","autoplaySpeed","arrows","infinite","eachImage","renderFailureView","renderLoadingView","renderAllImages","componentDidMount","render"],"mappings":"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","sourcesContent":["import {Component} from 'react'\nimport Slider from 'react-slick'\nimport Loader from 'react-loader-spinner'\nimport Cookies from 'js-cookie'\n\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\nclass ReactSlider extends Component {\n  state = {\n    sliderImages: [],\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getSliderImages()\n  }\n\n  getSliderImages = async () => {\n    this.setState({\n      apiStatus: apiStatusConstants.inProgress,\n    })\n    const jwtToken = Cookies.get('jwt_token')\n    const apiUrl = `https://apis.ccbp.in/restaurants-list/offers`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(apiUrl, options)\n    if (response.ok) {\n      const fetchedData = await response.json()\n      const updatedData = fetchedData.offers.map(offer => ({\n        id: offer.id,\n        imageUrl: offer.image_url,\n      }))\n      this.setState({\n        sliderImages: updatedData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({\n        apiStatus: apiStatusConstants.failure,\n      })\n    }\n  }\n\n  renderSliderListView = () => {\n    const {sliderImages} = this.state\n    const settings = {\n      dots: true,\n      autoplay: true,\n      autoplaySpeed: 2000,\n      arrows: false,\n      infinite: true,\n    }\n\n    return (\n      <div className=\"image-container\">\n        <Slider {...settings}>\n          {sliderImages.map(eachImage => (\n            <div key={eachImage.id}>\n              <img\n                className=\"slider-image\"\n                src={eachImage.imageUrl}\n                alt=\"offer\"\n              />\n            </div>\n          ))}\n        </Slider>\n      </div>\n    )\n  }\n\n  renderFailureView = () => (\n    <div className=\"slider-error-view-container\">\n      <h1 className=\"slider-failure-heading-text\">\n        Oops! Something Went Wrong\n      </h1>\n    </div>\n  )\n\n  renderLoadingView = () => (\n    <div testid=\"restaurants-offers-loader\" className=\"slider-loader-container\">\n      <Loader type=\"Oval\" color=\"#F7931E\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderAllImages = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderSliderListView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"slider-image-container\">{this.renderAllImages()}</div>\n    )\n  }\n}\n\nexport default ReactSlider\n"]},"metadata":{},"sourceType":"module"}