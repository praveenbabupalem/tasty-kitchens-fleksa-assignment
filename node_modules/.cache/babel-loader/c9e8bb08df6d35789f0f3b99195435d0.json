{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/covid19Dashboard/src/components/RestaurantFoodItem/index.js\";\nimport { Component } from 'react';\nimport { AiFillStar } from 'react-icons/ai';\nimport { BiRupee } from 'react-icons/bi';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RestaurantFoodItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.updateLocalStorage = () => {\n      const {\n        isButtonClicked,\n        itemQuantity\n      } = this.state;\n      const {\n        eachFoodItem\n      } = this.props;\n      const {\n        imageUrl,\n        name,\n        cost\n      } = eachFoodItem;\n      const {\n        id\n      } = eachFoodItem;\n      const localCartData = localStorage.getItem('cartData');\n      const parsedCartData = JSON.parse(localCartData);\n      const quantityKey = `quantity${id}`;\n      const buttonKey = `isButtonClicked${id}`;\n      localStorage.setItem(quantityKey, itemQuantity);\n      localStorage.setItem(buttonKey, isButtonClicked);\n\n      if (parsedCartData === null) {\n        const updatedParsedCartData = [];\n\n        if (isButtonClicked === true && itemQuantity > 0) {\n          const cartItem = {\n            id,\n            name,\n            cost,\n            imageUrl,\n            quantity: itemQuantity\n          };\n          updatedParsedCartData.push(cartItem);\n          localStorage.setItem('cartData', JSON.stringify(updatedParsedCartData));\n        }\n      } else {\n        const updatedCartData = parsedCartData;\n\n        if (isButtonClicked === true) {\n          const cartItem = {\n            id,\n            name,\n            cost,\n            imageUrl,\n            quantity: itemQuantity\n          };\n          const updatedCart = updatedCartData.filter(eachItem => eachItem.id !== id);\n          updatedCart.push(cartItem);\n          localStorage.setItem('cartData', JSON.stringify(updatedCart));\n        } else {\n          const updatedCart = updatedCartData.filter(eachItem => eachItem.id !== id);\n          localStorage.setItem('cartData', JSON.stringify(updatedCart));\n        }\n      }\n    };\n\n    this.onClickedAdd = () => {\n      this.setState(prev => ({\n        isButtonClicked: true,\n        itemQuantity: prev.itemQuantity + 1\n      }), this.updateLocalStorage);\n    };\n\n    this.onMinusClicked = () => {\n      const {\n        itemQuantity\n      } = this.state;\n\n      if (itemQuantity < 2) {\n        this.setState({\n          itemQuantity: 0,\n          isButtonClicked: false\n        }, this.updateLocalStorage);\n      } else {\n        this.setState(prev => ({\n          itemQuantity: prev.itemQuantity - 1,\n          isButtonClicked: true\n        }), this.updateLocalStorage);\n      }\n    };\n\n    this.onPlusClicked = () => {\n      const {\n        itemQuantity\n      } = this.state;\n      const updatedItemQuantity = itemQuantity + 1;\n      this.setState({\n        itemQuantity: updatedItemQuantity\n      }, this.updateLocalStorage);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      eachFoodItem\n    } = this.props;\n    const {\n      id\n    } = eachFoodItem;\n    const buttonStatus = localStorage.getItem(`isButtonClicked${id}`);\n    const quantityStatus = localStorage.getItem(`quantity${id}`);\n    this.setState({\n      isButtonClicked: JSON.parse(buttonStatus),\n      itemQuantity: JSON.parse(quantityStatus)\n    });\n  }\n\n  render() {\n    const {\n      eachFoodItem\n    } = this.props;\n    const {\n      imageUrl,\n      name,\n      cost,\n      rating\n    } = eachFoodItem;\n    const {\n      isButtonClicked,\n      itemQuantity\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      testid: \"foodItem\",\n      className: \"food-item-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: \"\",\n        className: \"food-item-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"food-item-details-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"food-item-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"food-item-cost\",\n          children: [/*#__PURE__*/_jsxDEV(BiRupee, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), cost]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-container\",\n          children: [/*#__PURE__*/_jsxDEV(AiFillStar, {\n            className: \"food-item-star\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"food-item-rating\",\n            children: rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), isButtonClicked && itemQuantity > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"food-item-quantity-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            testid: \"decrement-count\",\n            type: \"button\",\n            className: \"minus-button\",\n            onClick: this.onMinusClicked,\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            testid: \"active-count\",\n            className: \"item-quantity-number\",\n            children: itemQuantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            testid: \"increment-count\",\n            type: \"button\",\n            className: \"plus-button\",\n            onClick: this.onPlusClicked,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"food-item-button\",\n          onClick: this.onClickedAdd,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default RestaurantFoodItem;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/covid19Dashboard/src/components/RestaurantFoodItem/index.js"],"names":["Component","AiFillStar","BiRupee","RestaurantFoodItem","state","updateLocalStorage","isButtonClicked","itemQuantity","eachFoodItem","props","imageUrl","name","cost","id","localCartData","localStorage","getItem","parsedCartData","JSON","parse","quantityKey","buttonKey","setItem","updatedParsedCartData","cartItem","quantity","push","stringify","updatedCartData","updatedCart","filter","eachItem","onClickedAdd","setState","prev","onMinusClicked","onPlusClicked","updatedItemQuantity","componentDidMount","buttonStatus","quantityStatus","render","rating"],"mappings":"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","sourcesContent":["import {Component} from 'react'\nimport {AiFillStar} from 'react-icons/ai'\nimport {BiRupee} from 'react-icons/bi'\n\nimport './index.css'\n\nclass RestaurantFoodItem extends Component {\n  state = {}\n\n  componentDidMount() {\n    const {eachFoodItem} = this.props\n    const {id} = eachFoodItem\n    const buttonStatus = localStorage.getItem(`isButtonClicked${id}`)\n    const quantityStatus = localStorage.getItem(`quantity${id}`)\n\n    this.setState({\n      isButtonClicked: JSON.parse(buttonStatus),\n      itemQuantity: JSON.parse(quantityStatus),\n    })\n  }\n\n  updateLocalStorage = () => {\n    const {isButtonClicked, itemQuantity} = this.state\n    const {eachFoodItem} = this.props\n    const {imageUrl, name, cost} = eachFoodItem\n    const {id} = eachFoodItem\n    const localCartData = localStorage.getItem('cartData')\n    const parsedCartData = JSON.parse(localCartData)\n\n    const quantityKey = `quantity${id}`\n    const buttonKey = `isButtonClicked${id}`\n    localStorage.setItem(quantityKey, itemQuantity)\n    localStorage.setItem(buttonKey, isButtonClicked)\n\n    if (parsedCartData === null) {\n      const updatedParsedCartData = []\n\n      if (isButtonClicked === true && itemQuantity > 0) {\n        const cartItem = {id, name, cost, imageUrl, quantity: itemQuantity}\n        updatedParsedCartData.push(cartItem)\n        localStorage.setItem('cartData', JSON.stringify(updatedParsedCartData))\n      }\n    } else {\n      const updatedCartData = parsedCartData\n      if (isButtonClicked === true) {\n        const cartItem = {id, name, cost, imageUrl, quantity: itemQuantity}\n        const updatedCart = updatedCartData.filter(\n          eachItem => eachItem.id !== id,\n        )\n        updatedCart.push(cartItem)\n        localStorage.setItem('cartData', JSON.stringify(updatedCart))\n      } else {\n        const updatedCart = updatedCartData.filter(\n          eachItem => eachItem.id !== id,\n        )\n        localStorage.setItem('cartData', JSON.stringify(updatedCart))\n      }\n    }\n  }\n\n  onClickedAdd = () => {\n    this.setState(\n      prev => ({\n        isButtonClicked: true,\n        itemQuantity: prev.itemQuantity + 1,\n      }),\n      this.updateLocalStorage,\n    )\n  }\n\n  onMinusClicked = () => {\n    const {itemQuantity} = this.state\n    if (itemQuantity < 2) {\n      this.setState(\n        {\n          itemQuantity: 0,\n          isButtonClicked: false,\n        },\n        this.updateLocalStorage,\n      )\n    } else {\n      this.setState(\n        prev => ({\n          itemQuantity: prev.itemQuantity - 1,\n          isButtonClicked: true,\n        }),\n        this.updateLocalStorage,\n      )\n    }\n  }\n\n  onPlusClicked = () => {\n    const {itemQuantity} = this.state\n    const updatedItemQuantity = itemQuantity + 1\n    this.setState({itemQuantity: updatedItemQuantity}, this.updateLocalStorage)\n  }\n\n  render() {\n    const {eachFoodItem} = this.props\n    const {imageUrl, name, cost, rating} = eachFoodItem\n    const {isButtonClicked, itemQuantity} = this.state\n\n    return (\n      <li testid=\"foodItem\" className=\"food-item-container\">\n        <img src={imageUrl} alt=\"\" className=\"food-item-image\" />\n        <div className=\"food-item-details-container\">\n          <h1 className=\"food-item-name\">{name}</h1>\n          <p className=\"food-item-cost\">\n            <BiRupee />\n            {cost}\n          </p>\n          <div className=\"rating-container\">\n            <AiFillStar className=\"food-item-star\" />\n            <p className=\"food-item-rating\">{rating}</p>\n          </div>\n          {isButtonClicked && itemQuantity > 0 ? (\n            <div className=\"food-item-quantity-container\">\n              <button\n                testid=\"decrement-count\"\n                type=\"button\"\n                className=\"minus-button\"\n                onClick={this.onMinusClicked}\n              >\n                -\n              </button>\n              <p testid=\"active-count\" className=\"item-quantity-number\">\n                {itemQuantity}\n              </p>\n              <button\n                testid=\"increment-count\"\n                type=\"button\"\n                className=\"plus-button\"\n                onClick={this.onPlusClicked}\n              >\n                +\n              </button>\n            </div>\n          ) : (\n            <button\n              type=\"button\"\n              className=\"food-item-button\"\n              onClick={this.onClickedAdd}\n            >\n              Add\n            </button>\n          )}\n        </div>\n      </li>\n    )\n  }\n}\n\nexport default RestaurantFoodItem\n"]},"metadata":{},"sourceType":"module"}