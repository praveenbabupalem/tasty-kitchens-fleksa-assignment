{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/covid19Dashboard/src/components/AllRestaurantSection/index.js\";\nimport { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport Cookies from 'js-cookie';\nimport { AiOutlineLeftSquare, AiOutlineRightSquare } from 'react-icons/ai';\nimport ReactSlider from '../ReactSlider';\nimport RestaurantHeader from '../RestaurantHeader';\nimport RestaurantCard from '../RestaurantCard';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst sortByOptions = [{\n  id: 0,\n  displayText: 'Highest',\n  value: 'Highest'\n}, {\n  id: 2,\n  displayText: 'Lowest',\n  value: 'Lowest'\n}];\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS'\n};\n\nclass AllRestaurantSection extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      restaurantList: [],\n      activeOptionId: 'Lowest',\n      currentPage: 0,\n      maxPages: 0,\n      apiStatus: apiStatusConstants.initial\n    };\n\n    this.getRestaurants = async () => {\n      this.setState({\n        apiStatus: apiStatusConstants.inProgress\n      });\n      const jwtToken = Cookies.get('jwt_token');\n      const {\n        activeOptionId,\n        currentPage\n      } = this.state;\n      const apiUrl = `https://apis.ccbp.in/restaurants-list?offset=${currentPage * 9}&limit=9&sort_by_rating=${activeOptionId}`;\n      const options = {\n        headers: {\n          Authorization: `Bearer ${jwtToken}`\n        },\n        method: 'GET'\n      };\n      const response = await fetch(apiUrl, options);\n\n      if (response.ok) {\n        const fetchedData = await response.json();\n        console.log(fetchedData);\n        const maxItems = fetchedData.total;\n        const maxPages = maxItems % 9 + 1;\n        const updatedData = fetchedData.restaurants.map(restaurant => ({\n          name: restaurant.name,\n          cuisine: restaurant.cuisine,\n          id: restaurant.id,\n          imageUrl: restaurant.image_url,\n          rating: restaurant.user_rating.rating,\n          totalReviews: restaurant.user_rating.total_reviews,\n          ratingColor: restaurant.user_rating.rating_color\n        }));\n        this.setState({\n          maxPages,\n          restaurantList: updatedData,\n          apiStatus: apiStatusConstants.success\n        });\n      } else {\n        this.setState({\n          apiStatus: apiStatusConstants.failure\n        });\n      }\n    };\n\n    this.changeSortBy = activeOptionId => {\n      this.setState({\n        activeOptionId\n      }, this.getRestaurants);\n    };\n\n    this.renderRestaurantListView = () => {\n      const {\n        restaurantList,\n        activeOptionId\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(RestaurantHeader, {\n          activeOptionId: activeOptionId,\n          sortByOptions: sortByOptions,\n          changeSortBy: this.changeSortBy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"hr-line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"restaurant-list\",\n          children: restaurantList.map(restaurant => /*#__PURE__*/_jsxDEV(RestaurantCard, {\n            restaurant: restaurant\n          }, restaurant.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.renderFailureView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurant-error-view-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://res.cloudinary.com/dw1fcsurf/image/upload/v1635819172/Tasty%20Kitchen/PageNotFound/Group_wbimtk.png\",\n        alt: \"restaurants failure\",\n        className: \"restaurant-failure-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"restaurant-failure-heading-text\",\n        children: \"Page Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"restaurant-failure-description\",\n        children: \"we are sorry, the page you requested could not be found\\u2028Please go back to the homepage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"error-button\",\n        type: \"button\",\n        children: \"Home Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this);\n\n    this.renderLoadingView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      testid: \"restaurants-list-loader\",\n      className: \"restaurant-loader-container\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"Oval\",\n        color: \"#F7931E\",\n        height: \"50\",\n        width: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }, this);\n\n    this.renderRestaurants = () => {\n      const {\n        apiStatus\n      } = this.state;\n\n      switch (apiStatus) {\n        case apiStatusConstants.success:\n          return this.renderRestaurantListView();\n\n        case apiStatusConstants.failure:\n          return this.renderFailureView();\n\n        case apiStatusConstants.inProgress:\n          return this.renderLoadingView();\n\n        default:\n          return null;\n      }\n    };\n\n    this.leftArrowClicked = () => {\n      const {\n        currentPage\n      } = this.state;\n\n      if (currentPage > 0) {\n        this.setState(prev => ({\n          currentPage: prev.currentPage - 1\n        }), this.getRestaurants);\n      }\n    };\n\n    this.rightArrowClicked = () => {\n      const {\n        currentPage\n      } = this.state;\n\n      if (currentPage < 3) {\n        this.setState(prev => ({\n          currentPage: prev.currentPage + 1\n        }), this.getRestaurants);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getRestaurants();\n  }\n\n  render() {\n    const {\n      currentPage,\n      maxPages\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ReactSlider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-restaurant-responsive-container\",\n        children: [this.renderRestaurants(), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"restaurant-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"arrow-button\",\n            testid: \"pagination-left-button\",\n            onClick: this.leftArrowClicked,\n            children: /*#__PURE__*/_jsxDEV(AiOutlineLeftSquare, {\n              size: 35,\n              style: {\n                color: '#64748B'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            testid: \"active-page-number\",\n            className: \"current-page\",\n            children: [currentPage + 1, \" of \", maxPages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"arrow-button\",\n            testid: \"pagination-right-button\",\n            onClick: this.rightArrowClicked,\n            children: /*#__PURE__*/_jsxDEV(AiOutlineRightSquare, {\n              size: 35,\n              style: {\n                color: '#64748B'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AllRestaurantSection;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/covid19Dashboard/src/components/AllRestaurantSection/index.js"],"names":["Component","Loader","Cookies","AiOutlineLeftSquare","AiOutlineRightSquare","ReactSlider","RestaurantHeader","RestaurantCard","sortByOptions","id","displayText","value","apiStatusConstants","initial","success","failure","inProgress","AllRestaurantSection","state","restaurantList","activeOptionId","currentPage","maxPages","apiStatus","getRestaurants","setState","jwtToken","get","apiUrl","options","headers","Authorization","method","response","fetch","ok","fetchedData","json","console","log","maxItems","total","updatedData","restaurants","map","restaurant","name","cuisine","imageUrl","image_url","rating","user_rating","totalReviews","total_reviews","ratingColor","rating_color","changeSortBy","renderRestaurantListView","renderFailureView","renderLoadingView","renderRestaurants","leftArrowClicked","prev","rightArrowClicked","componentDidMount","render","color"],"mappings":"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","sourcesContent":["import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport Cookies from 'js-cookie'\n\nimport {AiOutlineLeftSquare, AiOutlineRightSquare} from 'react-icons/ai'\n\nimport ReactSlider from '../ReactSlider'\nimport RestaurantHeader from '../RestaurantHeader'\nimport RestaurantCard from '../RestaurantCard'\n\nimport './index.css'\n\nconst sortByOptions = [\n  {\n    id: 0,\n    displayText: 'Highest',\n    value: 'Highest',\n  },\n  {\n    id: 2,\n    displayText: 'Lowest',\n    value: 'Lowest',\n  },\n]\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass AllRestaurantSection extends Component {\n  state = {\n    restaurantList: [],\n    activeOptionId: 'Lowest',\n    currentPage: 0,\n    maxPages: 0,\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getRestaurants()\n  }\n\n  getRestaurants = async () => {\n    this.setState({\n      apiStatus: apiStatusConstants.inProgress,\n    })\n    const jwtToken = Cookies.get('jwt_token')\n    const {activeOptionId, currentPage} = this.state\n    const apiUrl = `https://apis.ccbp.in/restaurants-list?offset=${\n      currentPage * 9\n    }&limit=9&sort_by_rating=${activeOptionId}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(apiUrl, options)\n    if (response.ok) {\n      const fetchedData = await response.json()\n      console.log(fetchedData)\n      const maxItems = fetchedData.total\n      const maxPages = (maxItems % 9) + 1\n      const updatedData = fetchedData.restaurants.map(restaurant => ({\n        name: restaurant.name,\n        cuisine: restaurant.cuisine,\n        id: restaurant.id,\n        imageUrl: restaurant.image_url,\n        rating: restaurant.user_rating.rating,\n        totalReviews: restaurant.user_rating.total_reviews,\n        ratingColor: restaurant.user_rating.rating_color,\n      }))\n      this.setState({\n        maxPages,\n        restaurantList: updatedData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({\n        apiStatus: apiStatusConstants.failure,\n      })\n    }\n  }\n\n  changeSortBy = activeOptionId => {\n    this.setState({activeOptionId}, this.getRestaurants)\n  }\n\n  renderRestaurantListView = () => {\n    const {restaurantList, activeOptionId} = this.state\n\n    return (\n      <>\n        <RestaurantHeader\n          activeOptionId={activeOptionId}\n          sortByOptions={sortByOptions}\n          changeSortBy={this.changeSortBy}\n        />\n        <hr className=\"hr-line\" />\n        <ul className=\"restaurant-list\">\n          {restaurantList.map(restaurant => (\n            <RestaurantCard restaurant={restaurant} key={restaurant.id} />\n          ))}\n        </ul>\n      </>\n    )\n  }\n\n  renderFailureView = () => (\n    <div className=\"restaurant-error-view-container\">\n      <img\n        src=\"https://res.cloudinary.com/dw1fcsurf/image/upload/v1635819172/Tasty%20Kitchen/PageNotFound/Group_wbimtk.png\"\n        alt=\"restaurants failure\"\n        className=\"restaurant-failure-img\"\n      />\n      <h1 className=\"restaurant-failure-heading-text\">Page Not Found</h1>\n      <p className=\"restaurant-failure-description\">\n        we are sorry, the page you requested could not be found Please go back\n        to the homepage\n      </p>\n      <button className=\"error-button\" type=\"button\">\n        Home Page\n      </button>\n    </div>\n  )\n\n  renderLoadingView = () => (\n    <div\n      testid=\"restaurants-list-loader\"\n      className=\"restaurant-loader-container\"\n    >\n      <Loader type=\"Oval\" color=\"#F7931E\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderRestaurants = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderRestaurantListView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  leftArrowClicked = () => {\n    const {currentPage} = this.state\n    if (currentPage > 0) {\n      this.setState(\n        prev => ({currentPage: prev.currentPage - 1}),\n        this.getRestaurants,\n      )\n    }\n  }\n\n  rightArrowClicked = () => {\n    const {currentPage} = this.state\n    if (currentPage < 3) {\n      this.setState(\n        prev => ({currentPage: prev.currentPage + 1}),\n        this.getRestaurants,\n      )\n    }\n  }\n\n  render() {\n    const {currentPage, maxPages} = this.state\n    return (\n      <div>\n        <ReactSlider />\n        <div className=\"all-restaurant-responsive-container\">\n          {this.renderRestaurants()}\n          <div className=\"restaurant-navigation\">\n            <button\n              type=\"button\"\n              className=\"arrow-button\"\n              testid=\"pagination-left-button\"\n              onClick={this.leftArrowClicked}\n            >\n              <AiOutlineLeftSquare size={35} style={{color: '#64748B'}} />\n            </button>\n            <span testid=\"active-page-number\" className=\"current-page\">\n              {currentPage + 1} of {maxPages}\n            </span>\n            <button\n              type=\"button\"\n              className=\"arrow-button\"\n              testid=\"pagination-right-button\"\n              onClick={this.rightArrowClicked}\n            >\n              <AiOutlineRightSquare size={35} style={{color: '#64748B'}} />\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AllRestaurantSection\n"]},"metadata":{},"sourceType":"module"}